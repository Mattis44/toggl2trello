stages:
- tests
- build

tests:
  stage: tests
  tags: [docker]
  script:
  - result=$(curl -s -o /dev/null -w "%{http_code}" -X GET "https://api.trello.com/1/members/me/boards?key=$TRELLO_KEY&token=$TRELLO_TOKEN")
  - if [ $result -eq 200 ]; then echo "Trello API is working"; else echo "Trello API is not working"; exit 1; fi
  - result=$(curl -s -o /dev/null -w "%{http_code}" -X GET "https://api.track.toggl.com/api/v9/me" -u $TOGGL_API_TOKEN:api_token)
  - if [ $result -eq 200 ]; then echo "Toggl API is working"; else echo "Toggl API is not working"; exit 1; fi


docker-build:
  image: docker:latest
  stage: build
  tags: [docker]
  services:
  - docker:dind
  dependencies: [tests]
  before_script:
  - docker image prune -a -f
  - 'echo "{\"users\": []}" > constants.json'
  - 'echo "{\"Trello\": [{\"TRELLO_API_KEY\": \"\", \"TRELLO_API_TOKEN\": \"\", \"TRELLO_BOARD_ID\": \"\", \"TRELLO_BUSY_LABEL_ID\": \"\"}]}" > client/data.json'
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
  - docker build -t $CI_REGISTRY_USER/$DOCKER_REPO_NAME:latest .
  - docker push $CI_REGISTRY_USER/$DOCKER_REPO_NAME:latest
  rules:
  - if: $CI_COMMIT_BRANCH
    exists:
    - Dockerfile
